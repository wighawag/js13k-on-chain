{
  "address": "0x72361C9f3d4475CE13dA1997D34aFFB350cB17fB",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "gameData",
          "type": "bytes"
        }
      ],
      "name": "Debug",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "at",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "o_code",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "per10Thousands",
          "type": "uint96"
        }
      ],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "debug",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "deployCode",
          "type": "bytes"
        }
      ],
      "name": "mintRaw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x7c23720b5885c6cf7a46c673bfa43ed83047ec4199be6ae62a4ca3a148a78f75",
  "receipt": {
    "to": null,
    "from": "0x61c461EcC993aaDEB7e4b47E96d1B8cC37314B20",
    "contractAddress": "0x72361C9f3d4475CE13dA1997D34aFFB350cB17fB",
    "transactionIndex": 27,
    "gasUsed": "907111",
    "logsBloom": "0x
    "blockHash": "0x04d39992bfc8787f542b1c3b72b2cd95cf6dbb7dba4228089280010baf7110a0",
    "transactionHash": "0x7c23720b5885c6cf7a46c673bfa43ed83047ec4199be6ae62a4ca3a148a78f75",
    "logs": [],
    "blockNumber": 11334225,
    "cumulativeGasUsed": "4622144",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "5c9b0b8007184546d87dcc2066a67221",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"gameData\",\"type\":\"bytes\"}],\"name\":\"Debug\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"at\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"o_code\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"per10Thousands\",\"type\":\"uint96\"}],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"debug\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"deployCode\",\"type\":\"bytes\"}],\"name\":\"mintRaw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/JS24K.sol\":\"JS24K\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"src/JS24K.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-1.0\\npragma solidity 0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\n\\ncontract JS24K {\\n\\tusing Strings for uint96;\\n\\tusing Strings for uint256;\\n\\tusing Strings for uint160;\\n\\n\\tevent Transfer(address indexed from, address indexed to, uint256 indexed id);\\n\\n\\tmapping(uint256 => address) public ownerOf;\\n\\n\\tevent Debug(bytes data, bytes gameData);\\n\\n\\t// function debug(bytes calldata gameData) external {\\n\\t// \\tbytes memory deployCode = bytes.concat(hex\\\"61FFFF600E60003961FFFF6000F3\\\", gameData);\\n\\t// \\tbytes1 lenByte1 = bytes1(uint8(gameData.length >> 8));\\n\\t// \\tbytes1 lenByte2 = bytes1(uint8(gameData.length & 0xFF));\\n\\t// \\tdeployCode[1] = lenByte1;\\n\\t// \\tdeployCode[9] = lenByte1;\\n\\t// \\tdeployCode[2] = lenByte2;\\n\\t// \\tdeployCode[10] = lenByte2;\\n\\n\\t// \\temit Debug(deployCode, gameData);\\n\\t// }\\n\\n\\tfunction debug(bytes calldata) external {\\n\\t\\tuint256 newContract;\\n\\n\\t\\tassembly {\\n\\t\\t\\tlet len := calldataload(36)\\n\\t\\t\\tlet p := mload(0x40)\\n\\t\\t\\tmstore(p, 0x61FFFF600E60003961FFFF6000F3000000000000000000000000000000000000)\\n\\t\\t\\tlet lenByte1 := shr(8, len)\\n\\t\\t\\tlet lenByte2 := and(len, 0xFF)\\n\\t\\t\\tmstore8(add(p, 1), lenByte1)\\n\\t\\t\\tmstore8(add(p, 2), lenByte2)\\n\\t\\t\\tmstore8(add(p, 9), lenByte1)\\n\\t\\t\\tmstore8(add(p, 10), lenByte2)\\n\\t\\t\\tcalldatacopy(add(p, 14), 68, len)\\n\\n\\t\\t\\tnewContract := create(0, p, add(len, 14))\\n\\t\\t\\tlog2(p, add(len, 14), len, newContract)\\n\\t\\t\\tlog4(0, 0, 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, 0, caller(), newContract)\\n\\t\\t}\\n\\t}\\n\\n\\tfunction deployGame() internal returns (uint256) {\\n\\t\\tuint256 newContract;\\n\\t\\tassembly (\\\"memory-safe\\\") {\\n\\t\\t\\tlet len := calldataload(36)\\n\\t\\t\\tlet p := mload(0x40)\\n\\t\\t\\tmstore(p, 0x61FFFF600E60003961FFFF6000F3000000000000000000000000000000000000)\\n\\t\\t\\tlet lenByte1 := shr(8, len)\\n\\t\\t\\tlet lenByte2 := and(len, 0xFF)\\n\\t\\t\\tmstore8(add(p, 1), lenByte1)\\n\\t\\t\\tmstore8(add(p, 2), lenByte2)\\n\\t\\t\\tmstore8(add(p, 9), lenByte1)\\n\\t\\t\\tmstore8(add(p, 10), lenByte2)\\n\\t\\t\\tcalldatacopy(add(p, 14), 68, len)\\n\\n\\t\\t\\tnewContract := create(0, p, add(len, 14))\\n\\t\\t}\\n\\t\\treturn newContract;\\n\\t}\\n\\n\\t// function mint(bytes calldata gameData) external {\\n\\t// \\tbytes memory deployCode = bytes.concat(hex\\\"61FFFF600E60003961FFFF6000F3\\\", gameData);\\n\\t// \\tbytes1 lenByte1 = bytes1(uint8(gameData.length >> 8));\\n\\t// \\tbytes1 lenByte2 = bytes1(uint8(gameData.length & 0xFF));\\n\\t// \\tdeployCode[1] = lenByte1;\\n\\t// \\tdeployCode[9] = lenByte1;\\n\\t// \\tdeployCode[2] = lenByte2;\\n\\t// \\tdeployCode[10] = lenByte2;\\n\\n\\t// \\tuint256 newContract;\\n\\t// \\tassembly {\\n\\t// \\t\\tnewContract := create(0, add(deployCode, 32), mload(deployCode))\\n\\t// \\t}\\n\\t// \\townerOf[newContract] = msg.sender;\\n\\t// \\temit Transfer(address(0), msg.sender, newContract);\\n\\t// }\\n\\n\\tfunction mint(bytes calldata) external {\\n\\t\\tuint256 newContract;\\n\\t\\tassembly (\\\"memory-safe\\\") {\\n\\t\\t\\tlet len := calldataload(36)\\n\\t\\t\\tlet p := mload(0x40)\\n\\t\\t\\tmstore(p, 0x61FFFF600E60003961FFFF6000F3000000000000000000000000000000000000)\\n\\t\\t\\tlet lenByte1 := shr(8, len)\\n\\t\\t\\tlet lenByte2 := and(len, 0xFF)\\n\\t\\t\\tmstore8(add(p, 1), lenByte1)\\n\\t\\t\\tmstore8(add(p, 2), lenByte2)\\n\\t\\t\\tmstore8(add(p, 9), lenByte1)\\n\\t\\t\\tmstore8(add(p, 10), lenByte2)\\n\\t\\t\\tcalldatacopy(add(p, 14), 68, len)\\n\\n\\t\\t\\tnewContract := create(0, p, add(len, 14))\\n\\t\\t\\tlog2(p, add(len, 14), len, newContract) // need this line, no idea why, looks like some memory management issues\\n\\t\\t}\\n\\t\\townerOf[newContract] = msg.sender;\\n\\t\\temit Transfer(address(0), msg.sender, newContract);\\n\\t}\\n\\n\\tfunction mintRaw(bytes memory deployCode) external {\\n\\t\\tuint256 newContract;\\n\\t\\tassembly {\\n\\t\\t\\tnewContract := create(0, add(deployCode, 32), mload(deployCode))\\n\\t\\t}\\n\\t\\townerOf[newContract] = msg.sender;\\n\\t\\temit Transfer(address(0), msg.sender, newContract);\\n\\t}\\n\\n\\tfunction contractURI(address receiver, uint96 per10Thousands) external pure returns (string memory) {\\n\\t\\treturn\\n\\t\\t\\tstring(\\n\\t\\t\\t\\tbytes.concat(\\n\\t\\t\\t\\t\\t'data:application/json,{\\\"name\\\":\\\"JS24K\\\",\\\"description\\\":JS24K%20on-chain%20.\\\",\\\"image\\\":\\\"data:image/svg+xml;base64,\\\",\\\"external_link\\\":\\\"https://JS24Kgames.com\\\",\\\"seller_fee_basis_points\\\":',\\n\\t\\t\\t\\t\\tbytes(per10Thousands.toString()),\\n\\t\\t\\t\\t\\t',\\\"fee_recipient\\\":\\\"',\\n\\t\\t\\t\\t\\tbytes(uint160(receiver).toHexString(20)),\\n\\t\\t\\t\\t\\t'\\\"}'\\n\\t\\t\\t\\t)\\n\\t\\t\\t);\\n\\t}\\n\\n\\tfunction at(address _addr) public view returns (bytes memory o_code) {\\n\\t\\tassembly {\\n\\t\\t\\t// retrieve the size of the code, this needs assembly\\n\\t\\t\\tlet size := extcodesize(_addr)\\n\\t\\t\\t// allocate output byte array - this could also be done without assembly\\n\\t\\t\\t// by using o_code = new bytes(size)\\n\\t\\t\\to_code := mload(0x40)\\n\\t\\t\\t// new \\\"memory end\\\" including padding\\n\\t\\t\\tmstore(0x40, add(o_code, and(add(add(size, 0x20), 0x1f), not(0x1f))))\\n\\t\\t\\t// store length in memory\\n\\t\\t\\tmstore(o_code, size)\\n\\t\\t\\t// actually retrieve the code, this needs assembly\\n\\t\\t\\textcodecopy(_addr, add(o_code, 0x20), 0, size)\\n\\t\\t}\\n\\t}\\n\\n\\tfunction tokenURI(uint256 id) external view returns (string memory) {\\n\\t\\tbytes memory gameData = at(address(uint160(id)));\\n\\n\\t\\tstring memory gameName = \\\"Triska\\\";\\n\\t\\tstring memory gameId = \\\"triska\\\";\\n\\t\\treturn\\n\\t\\t\\tstring(\\n\\t\\t\\t\\tbytes.concat(\\n\\t\\t\\t\\t\\t'data:application/json,{\\\"name\\\":\\\"',\\n\\t\\t\\t\\t\\tbytes(gameName),\\n\\t\\t\\t\\t\\t'\\\",\\\"description\\\":\\\"A%20Game\\\",\\\"external_url\\\":\\\"',\\n\\t\\t\\t\\t\\t\\\"https://JS24Kgames.com/entries/\\\",\\n\\t\\t\\t\\t\\tbytes(gameId),\\n\\t\\t\\t\\t\\t'\\\",\\\"image\\\":\\\"',\\n\\t\\t\\t\\t\\t\\\"<svg%2520viewBox='0%25200%252032%252016'xmlns='http://www.w3.org/2000/svg'><text%2520x='50%'y='50%'dominant-baseline='middle'text-anchor='middle'style='fill:rgb(219,39,119);font-size:12px;'>\\\",\\n\\t\\t\\t\\t\\tbytes(gameName),\\n\\t\\t\\t\\t\\t\\\"</text></svg>\\\"\\n\\t\\t\\t\\t\\t'\\\",',\\n\\t\\t\\t\\t\\t'\\\"animation_url\\\":\\\"data:text/html;base64,',\\n\\t\\t\\t\\t\\tgameData,\\n\\t\\t\\t\\t\\t'\\\"}'\\n\\t\\t\\t\\t)\\n\\t\\t\\t);\\n\\t}\\n}\\n\",\"keccak256\":\"0x29a6c0a1673d4e93b46eff9c6601c49ff192816f90bb9892f84b5bc5dc144079\",\"license\":\"AGPL-1.0\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80639beba0f91161005b5780639beba0f91461010a578063c87b56dd1461011d578063cc4c33241461013d578063dce4a4471461015057600080fd5b806354359395146100825780636352211e146100975780637ba0e2e7146100f7575b600080fd5b610095610090366004610821565b610163565b005b6100cd6100a53660046108d2565b60006020819052908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100956101053660046108eb565b6101db565b6100956101183660046108eb565b6102ad565b61013061012b3660046108d2565b610344565b6040516100ee91906109b9565b61013061014b3660046109f5565b6103f7565b61013061015e366004610a3d565b610459565b60008151602083016000f060008181526020819052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001633908117909155905192935083929091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006024356040517f61ffff600e60003961ffff6000f300000000000000000000000000000000000081528160081c60ff831681600184015380600284015381600984015380600a8401535050816044600e830137600e8201816000f092508282600e840183a2505060008181526020819052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000163390811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4505050565b60006024356040517f61ffff600e60003961ffff6000f300000000000000000000000000000000000081528160081c60ff831681600184015380600284015381600984015380600a8401535050816044600e830137600e8201816000f092508282600e840183a25050803360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4505050565b6060600061035183610459565b905060006040518060400160405280600681526020017f547269736b610000000000000000000000000000000000000000000000000000815250905060006040518060400160405280600681526020017f747269736b6100000000000000000000000000000000000000000000000000008152509050818183856040516020016103de9493929190610a74565b6040516020818303038152906040529350505050919050565b6060610410826bffffffffffffffffffffffff16610480565b61043173ffffffffffffffffffffffffffffffffffffffff851660146105bd565b604051602001610442929190610d02565b604051602081830303815290604052905092915050565b60408051603f833b908101601f191682019092528181529080600060208401853c50919050565b6060816000036104c357505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156104ed57806104d781610e81565b91506104e69050600a83610eb1565b91506104c7565b60008167ffffffffffffffff8111156105085761050861080b565b6040519080825280601f01601f191660200182016040528015610532576020820181803683370190505b5090505b84156105b557610547600183610ec5565b9150610554600a86610edc565b61055f906030610ef0565b60f81b81838151811061057457610574610f08565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506105ae600a86610eb1565b9450610536565b949350505050565b606060006105cc836002610f1e565b6105d7906002610ef0565b67ffffffffffffffff8111156105ef576105ef61080b565b6040519080825280601f01601f191660200182016040528015610619576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061065057610650610f08565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106106b3576106b3610f08565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006106ef846002610f1e565b6106fa906001610ef0565b90505b6001811115610797577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061073b5761073b610f08565b1a60f81b82828151811061075157610751610f08565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c9361079081610f3d565b90506106fd565b508315610804576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640160405180910390fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561083357600080fd5b813567ffffffffffffffff8082111561084b57600080fd5b818401915084601f83011261085f57600080fd5b8135818111156108715761087161080b565b604051601f8201601f19908116603f011681019083821181831017156108995761089961080b565b816040528281528760208487010111156108b257600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156108e457600080fd5b5035919050565b600080602083850312156108fe57600080fd5b823567ffffffffffffffff8082111561091657600080fd5b818501915085601f83011261092a57600080fd5b81358181111561093957600080fd5b86602082850101111561094b57600080fd5b60209290920196919550909350505050565b60005b83811015610978578181015183820152602001610960565b83811115610987576000848401525b50505050565b600081518084526109a581602086016020860161095d565b601f01601f19169290920160200192915050565b602081526000610804602083018461098d565b803573ffffffffffffffffffffffffffffffffffffffff811681146109f057600080fd5b919050565b60008060408385031215610a0857600080fd5b610a11836109cc565b915060208301356bffffffffffffffffffffffff81168114610a3257600080fd5b809150509250929050565b600060208284031215610a4f57600080fd5b610804826109cc565b60008151610a6a81856020860161095d565b9290920192915050565b7f646174613a6170706c69636174696f6e2f6a736f6e2c7b226e616d65223a2200815260008551610aac81601f850160208a0161095d565b7f222c226465736372697074696f6e223a224125323047616d65222c2265787465601f918401918201527f726e616c5f75726c223a22000000000000000000000000000000000000000000603f8201527f68747470733a2f2f4a5332344b67616d65732e636f6d2f656e74726965732f00604a8201528551610b35816069840160208a0161095d565b7f222c22696d616765223a22000000000000000000000000000000000000000000606992909101918201527f3c737667253235323076696577426f783d27302532353230302532353230333260748201527f2532353230313627786d6c6e733d27687474703a2f2f7777772e77332e6f726760948201527f2f323030302f737667273e3c746578742532353230783d2735302527793d273560b48201527f302527646f6d696e616e742d626173656c696e653d276d6964646c652774657860d48201527f742d616e63686f723d276d6964646c65277374796c653d2766696c6c3a72676260f48201527f283231392c33392c313139293b666f6e742d73697a653a313270783b273e0000610114820152610c53610132820186610a58565b7f3c2f746578743e3c2f7376673e222c0000000000000000000000000000000000815290507f22616e696d6174696f6e5f75726c223a22646174613a746578742f68746d6c3b600f8201527f6261736536342c00000000000000000000000000000000000000000000000000602f820152610cd16036820185610a58565b7f227d0000000000000000000000000000000000000000000000000000000000008152600201979650505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e2c7b226e616d65223a224a81527f5332344b222c226465736372697074696f6e223a4a5332344b2532306f6e2d6360208201527f6861696e2532302e222c22696d616765223a22646174613a696d6167652f737660408201527f672b786d6c3b6261736536342c222c2265787465726e616c5f6c696e6b223a2260608201527f68747470733a2f2f4a5332344b67616d65732e636f6d222c2273656c6c65725f60808201527f6665655f62617369735f706f696e7473223a000000000000000000000000000060a082015260008351610df88160b285016020880161095d565b7f2c226665655f726563697069656e74223a22000000000000000000000000000060b2918401918201528351610e358160c484016020880161095d565b7f227d00000000000000000000000000000000000000000000000000000000000060c4929091019182015260c601949350505050565b634e487b7160e01b600052601160045260246000fd5b60006000198203610e9457610e94610e6b565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082610ec057610ec0610e9b565b500490565b600082821015610ed757610ed7610e6b565b500390565b600082610eeb57610eeb610e9b565b500690565b60008219821115610f0357610f03610e6b565b500190565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615610f3857610f38610e6b565b500290565b600081610f4c57610f4c610e6b565b50600019019056fea2646970667358221220de53b72b43c6b9e5ced016bd44da8f6bd845e416e6ca4bdbe435c22e33f7601f64736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 249,
        "contract": "src/JS24K.sol:JS24K",
        "label": "ownerOf",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}